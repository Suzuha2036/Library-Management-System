/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package librarymanagementsystem;


import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSetMetaData;
import javax.swing.ImageIcon;


public final class InventoryFrame extends javax.swing.JFrame {

    /**
     * Creates new form InventoryFrame
     */
    public InventoryFrame() {
        initComponents();
        updateTable();
        showLogo();
        
    }
    
    
    String databaseURL = "jdbc:ucanaccess://C:\\Users\\User\\Documents\\BK_Archieves.accdb";
    Connection con;
    PreparedStatement pst;
    ResultSet rs;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inventory_Table = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        edit_Button = new javax.swing.JButton();
        add_Button = new javax.swing.JButton();
        coverType_TextField = new javax.swing.JTextField();
        coverType_Label = new javax.swing.JLabel();
        edition_TextField = new javax.swing.JTextField();
        edition_Label = new javax.swing.JLabel();
        publisher_TextField = new javax.swing.JTextField();
        publisher_Label = new javax.swing.JLabel();
        category_TextField = new javax.swing.JTextField();
        category_Label = new javax.swing.JLabel();
        author_TextField = new javax.swing.JTextField();
        author_Label = new javax.swing.JLabel();
        bookTitle_TextField = new javax.swing.JTextField();
        bookTitle_Label = new javax.swing.JLabel();
        delete_Button = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        logout_Button = new javax.swing.JButton();
        inventoryName_Label = new javax.swing.JLabel();
        logoLabel = new javax.swing.JLabel();

        jLabel8.setText("jLabel8");

        jLabel9.setText("jLabel9");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        inventory_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Book Title", "Author", "Category", "Publisher", "Edition", "Cover Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        inventory_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inventory_TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(inventory_Table);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 70, 830, 610));

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        edit_Button.setText("EDIT");
        edit_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_ButtonActionPerformed(evt);
            }
        });

        add_Button.setText("ADD");
        add_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_ButtonActionPerformed(evt);
            }
        });

        coverType_Label.setText("Cover Type");

        edition_Label.setText("Edition");

        publisher_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publisher_TextFieldActionPerformed(evt);
            }
        });

        publisher_Label.setText("Publisher");

        category_Label.setText("Category");

        author_Label.setText("Author");

        bookTitle_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookTitle_TextFieldActionPerformed(evt);
            }
        });

        bookTitle_Label.setText("Book Title");

        delete_Button.setText("DELETE");
        delete_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(delete_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coverType_Label)
                    .addComponent(edition_Label)
                    .addComponent(publisher_Label)
                    .addComponent(category_Label)
                    .addComponent(author_Label)
                    .addComponent(bookTitle_Label)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(coverType_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edition_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(publisher_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(category_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(author_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bookTitle_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(bookTitle_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bookTitle_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(author_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(author_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(category_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(category_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(publisher_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(publisher_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(edition_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edition_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(coverType_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coverType_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(add_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edit_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(delete_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 270, 570));

        logout_Button.setBackground(new java.awt.Color(255, 102, 102));
        logout_Button.setFont(new java.awt.Font("Monospac821 BT", 1, 12)); // NOI18N
        logout_Button.setForeground(new java.awt.Color(255, 255, 255));
        logout_Button.setText("LOG OUT");
        logout_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout_ButtonActionPerformed(evt);
            }
        });

        inventoryName_Label.setFont(new java.awt.Font("Sitka Subheading", 1, 36)); // NOI18N
        inventoryName_Label.setForeground(new java.awt.Color(0, 140, 204));
        inventoryName_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        inventoryName_Label.setText(" Book Keepers' Archives Inventory ");
        inventoryName_Label.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 153), 1, true));
        inventoryName_Label.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        inventoryName_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logout_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(logoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE)
                .addComponent(inventoryName_Label)
                .addGap(181, 181, 181))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(inventoryName_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(logoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 535, Short.MAX_VALUE)
                .addComponent(logout_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -10, 1200, 760));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1180, 740));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void showLogo(){
        ImageIcon libraryLogo = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("libraryLogo.png")));
        
        Image original = libraryLogo.getImage();
        Image resized = original.getScaledInstance(logoLabel.getWidth(),logoLabel.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(resized);
        logoLabel.setIcon(image);
             
        
    }
    
    public void updateTable(){
        int c;
        
        try {
        con = DriverManager.getConnection(databaseURL);
        pst = con.prepareStatement("Select * from book_Table");
        rs = pst.executeQuery();
        
        ResultSetMetaData rsd = rs.getMetaData();
        c = rsd.getColumnCount();
        DefaultTableModel dft = (DefaultTableModel)inventory_Table.getModel();
        dft.setRowCount(0);
        
        while(rs.next()){
            Vector v2 = new Vector();
            for(int i = 0; i <=c;i++){
                v2.add(rs.getString("ID"));
                v2.add(rs.getString("Book_Title"));
                v2.add(rs.getString("Author"));
                v2.add(rs.getString("Category"));
                v2.add(rs.getString("Publisher"));
                v2.add(rs.getString("Edition"));
                v2.add(rs.getString("Cover_Type"));
          
            }
            dft.addRow(v2);
        }
                               
        } catch (SQLException ex) {
            Logger.getLogger(InventoryFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void add_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_ButtonActionPerformed
        
        String Book_Title, Category, Author, Publisher, Edition, Cover_Type;
        
        Book_Title = bookTitle_TextField.getText();
        Author = author_TextField.getText();
        Category = category_TextField.getText();
        Publisher = publisher_TextField.getText();
        Edition = edition_TextField.getText();
        Cover_Type = coverType_TextField.getText();
       
        
        
        try{
        con = DriverManager.getConnection(databaseURL);
        
        pst = con.prepareStatement("INSERT INTO book_Table(Book_Title,Author,Category,Publisher,Edition,Cover_Type)VALUES(?,?,?,?,?,?)");
        pst.setString(1,Book_Title);
        pst.setString(2,Author);
        pst.setString(3,Category);
        pst.setString(4,Publisher);
        pst.setString(5,Edition);
        pst.setString(6,Cover_Type);
        
        pst.executeUpdate();
        
        JOptionPane.showMessageDialog(this, "Record Added");
        bookTitle_TextField.setText("");
        author_TextField.setText("");
        category_TextField.setText("");
        publisher_TextField.setText("");
        edition_TextField.setText("");
        coverType_TextField.setText("");
        
        updateTable();
                                      
        }
         catch (HeadlessException | SQLException e){
         JOptionPane.showMessageDialog(this, e);

         }  
        
    }//GEN-LAST:event_add_ButtonActionPerformed

    private void edit_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_ButtonActionPerformed
        
        DefaultTableModel model = (DefaultTableModel)inventory_Table.getModel();
        int selectedIndex = inventory_Table.getSelectedRow();
        
        int id = Integer.parseInt(model.getValueAt(selectedIndex, 0).toString());
        
        String Book_Title, Category, Author, Publisher, Edition, Cover_Type;
        
        Book_Title = bookTitle_TextField.getText();
        Author = author_TextField.getText();
        Category = category_TextField.getText();
        Publisher = publisher_TextField.getText();
        Edition = edition_TextField.getText();
        Cover_Type = coverType_TextField.getText();
        
        
        try{
        con = DriverManager.getConnection(databaseURL);
        
        pst = con.prepareStatement("UPDATE book_Table SET Book_Title=?,Author=?,Category=?,Publisher=?,Edition=?,Cover_Type=? WHERE id =?");
        pst.setString(1,Book_Title);
        pst.setString(2,Author);
        pst.setString(3,Category);
        pst.setString(4,Publisher);
        pst.setString(5,Edition);
        pst.setString(6,Cover_Type);
        pst.setInt(7,id);
        
        pst.executeUpdate();
        JOptionPane.showMessageDialog(this, "Record Edited");
        bookTitle_TextField.setText("");
        author_TextField.setText("");
        category_TextField.setText("");
        publisher_TextField.setText("");
        edition_TextField.setText("");
        coverType_TextField.setText("");
        bookTitle_TextField.requestFocus();
        
        updateTable();
                                            
        
         }
         catch (HeadlessException | SQLException e){
             JOptionPane.showMessageDialog(this, e);
         }
        
                                 
        
        
    }//GEN-LAST:event_edit_ButtonActionPerformed

    private void inventory_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventory_TableMouseClicked
        
        DefaultTableModel model = (DefaultTableModel)inventory_Table.getModel();
        int selectedIndex = inventory_Table.getSelectedRow();
        
        bookTitle_TextField.setText(model.getValueAt(selectedIndex,1).toString());
        author_TextField.setText(model.getValueAt(selectedIndex,2).toString());
        category_TextField.setText(model.getValueAt(selectedIndex,3).toString());
        publisher_TextField.setText(model.getValueAt(selectedIndex,4).toString());
        edition_TextField.setText(model.getValueAt(selectedIndex,5).toString());
        coverType_TextField.setText(model.getValueAt(selectedIndex,6).toString());
        
    }//GEN-LAST:event_inventory_TableMouseClicked

    private void delete_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_ButtonActionPerformed
        
        DefaultTableModel model = (DefaultTableModel)inventory_Table.getModel();
        int selectedIndex = inventory_Table.getSelectedRow();
        
        int id = Integer.parseInt(model.getValueAt(selectedIndex, 0).toString()); 
      
        
        int dialogresult = JOptionPane.showConfirmDialog(this,"Do you want to delete the record","Warning",JOptionPane.YES_NO_OPTION);
        if(dialogresult == JOptionPane.YES_NO_OPTION){
            
        try{
        con = DriverManager.getConnection(databaseURL);
        
        pst = con.prepareStatement("DELETE FROM book_Table WHERE id = ?");
        
        pst.setInt(1,id);
        pst.executeUpdate();
        JOptionPane.showMessageDialog(this, "Record Deleted");
        updateTable();
        
        bookTitle_TextField.setText("");
        author_TextField.setText("");
        category_TextField.setText("");
        publisher_TextField.setText("");
        edition_TextField.setText("");
        coverType_TextField.setText("");
        bookTitle_TextField.requestFocus();
                                             
         }
         catch (HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(this, e);
         }
        
        }
        
                                                
        
    }//GEN-LAST:event_delete_ButtonActionPerformed

    private void logout_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout_ButtonActionPerformed
       
       int choice = JOptionPane.showConfirmDialog(
        this, 
        "Do you want to log out?", 
        "Logout", 
        JOptionPane.YES_NO_OPTION
    );

    if (choice == JOptionPane.YES_OPTION) {
        LoginFrame loginPanel = new LoginFrame();
        loginPanel.show();
        dispose();
    }
    }//GEN-LAST:event_logout_ButtonActionPerformed

    private void publisher_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publisher_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_publisher_TextFieldActionPerformed

    private void bookTitle_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookTitle_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookTitle_TextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InventoryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InventoryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InventoryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InventoryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InventoryFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_Button;
    private javax.swing.JLabel author_Label;
    private javax.swing.JTextField author_TextField;
    private javax.swing.JLabel bookTitle_Label;
    private javax.swing.JTextField bookTitle_TextField;
    private javax.swing.JLabel category_Label;
    private javax.swing.JTextField category_TextField;
    private javax.swing.JLabel coverType_Label;
    private javax.swing.JTextField coverType_TextField;
    private javax.swing.JButton delete_Button;
    private javax.swing.JButton edit_Button;
    private javax.swing.JLabel edition_Label;
    private javax.swing.JTextField edition_TextField;
    private javax.swing.JLabel inventoryName_Label;
    private javax.swing.JTable inventory_Table;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JButton logout_Button;
    private javax.swing.JLabel publisher_Label;
    private javax.swing.JTextField publisher_TextField;
    // End of variables declaration//GEN-END:variables
}
